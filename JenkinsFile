pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/Shalok-sys/SIT223_Task6.2C.git'  
    }

    stages {

        stage('Checkout Code') {
            steps {
                git branch: 'main', url: "${GIT_REPO}"
            }
        }

        stage('Build') {
            steps {
                script {
                    echo "Building the project using Maven..."
                    echo "Maven will compile and package the code into a JAR or WAR file."
                    echo "This step ensures that the code compiles correctly before further processing."
                }
            }
        }
// This is something 
        stage('Unit & Integration Tests') {
            steps {
                script {
                    echo "Running unit tests using JUnit..."
                    echo "JUnit tests individual components of the application to verify correctness."
                    echo "Integration tests using Selenium will check if different components work together."
                }
            }
            post {
                success {
                    emailext subject: "Jenkins - Unit & Integration Tests Passed",
                             body: "All tests passed successfully.",
                             to: "developer@example.com"
                }
                failure {
                    emailext subject: "Jenkins - Tests Failed",
                             body: "Some unit/integration tests failed. Check Jenkins logs for details.",
                             to: "developer@example.com"
                }
            }
        }

        stage('Code Analysis') {
            steps {
                script {
                    echo "Analyzing code quality using SonarQube..."
                    echo "SonarQube scans the code for maintainability, bugs, and security issues."
                    echo "This ensures adherence to coding standards and best practices."
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    echo "Performing security scan using OWASP Dependency Check..."
                    echo "This tool identifies known vulnerabilities in dependencies."
                    echo "Ensures that the project does not use insecure libraries."
                }
            }
            post {
                success {
                    emailext subject: "Jenkins - Security Scan Passed",
                             body: "No critical vulnerabilities detected.",
                             to: "security@example.com"
                }
                failure {
                    emailext subject: "Jenkins - Security Scan Issues Found",
                             body: "Some vulnerabilities were detected. Review OWASP scan logs.",
                             to: "security@example.com"
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                script {
                    echo "Deploying the application to the staging server via SSH..."
                    echo "The staging environment is a replica of production where final testing happens."
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                script {
                    echo "Running integration tests on staging..."
                    echo "Verifying that the deployed application works correctly in a production-like environment."
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    echo "Deploying the application to the production server via SSH..."
                    echo "This step makes the final application live for users."
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline execution completed."
        }
    }
}
